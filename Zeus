repeat wait() until game:IsLoaded()

local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")
local Lighting = game:GetService("Lighting")

-- Verifica se é lua cheia e começo da noite
local function IsFullMoonStarting()
	local sky = Lighting:FindFirstChild("Sky")
	if not sky then return false end

	local moon = sky:GetAttribute("MoonPhase")
	local time = Lighting.ClockTime
	return moon == "FullMoon" and time >= 18 and time <= 19.5
end

-- Server hop compatível
local function HopServer()
	local success, result = pcall(function()
		local req = (syn and syn.request) or (http_request) or (request)
		return req({
			Url = "https://games.roblox.com/v1/games/2753915549/servers/Public?sortOrder=Asc&limit=100",
			Method = "GET"
		})
	end)

	if not success or not result or not result.Body then
		warn("Erro ao buscar servidores. Seu executor pode não suportar 'request()'.")
		return
	end

	local data = HttpService:JSONDecode(result.Body)

	for _, server in pairs(data.data) do
		if server.playing < server.maxPlayers and server.id ~= game.JobId then
			warn("Hop para servidor:", server.id)
			TeleportService:TeleportToPlaceInstance(game.PlaceId, server.id, Players.LocalPlayer)
			wait(3)
			break
		end
	end
end

-- Executar
if IsFullMoonStarting() then
	warn("Lua cheia no começo! Faça o Trial!")
else
	warn("Lua cheia não detectada, hoppando servidor...")
	HopServer()
end
