repeat wait() until game:IsLoaded()
local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local PlaceID = game.PlaceId

getgenv().FullMoonHop = true

-- Função para checar lua cheia
local function isFullMoon()
    local moon = workspace:FindFirstChild("Moon")
    if moon and moon:FindFirstChild("MoonTexture") then
        local tex = moon.MoonTexture.Texture
        return tex:match("FullMoon") ~= nil or tex:lower():find("full")
    end
    return false
end

-- Função de server hop
local function hopServer()
    local success, servers = pcall(function()
        return HttpService:JSONDecode(game:HttpGet(
            "https://games.roblox.com/v1/games/" .. PlaceID .. "/servers/Public?sortOrder=Asc&limit=100"
        ))
    end)

    if success and servers.data then
        for _, server in pairs(servers.data) do
            if server.playing < server.maxPlayers then
                TeleportService:TeleportToPlaceInstance(PlaceID, server.id, LocalPlayer)
                wait(3)
            end
        end
    end
end

-- Loop de detecção e troca
while getgenv().FullMoonHop do
    wait(2)
    if isFullMoon() then
        warn("Lua cheia encontrada!")
        break
    else
        warn("Lua não é cheia. Trocando de servidor...")
        hopServer()
        wait(8)
    end
end
                
